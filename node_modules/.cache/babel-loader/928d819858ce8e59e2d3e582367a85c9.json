{"ast":null,"code":"import * as d3 from 'd3';\nimport * as points from './models/points.js';\nimport * as helpers from './utils/helpers.js';\nimport * as scatterplot from './plots/scatterplot.js';\nlet doses; // this should be grabbed from somewhere across all sections?\n// https://observablehq.com/@d3/working-with-color?collection=@d3/d3-color\n\nfunction createVolcanoConfig(data, config, plotConfig) {\n  plotConfig = {\n    rootId: config.rootId,\n    // width: d3.select(`#${config.rootId}`).node().clientWidth,\n    // height:  d3.select(`#${config.rootId}`).node().clientWidth,\n    width: d3.select(`#${config.rootId}`).node().clientHeight,\n    height: d3.select(`#${config.rootId}`).node().clientHeight,\n    padding: config.padding\n  }; // let cDomain = (Object.values(data).map(d=>d.c)).filter(helpers.getUnique).sort((a, b) => (Number.isFinite(a) ? a: Infinity) - (Number.isFinite(b) ? b : Infinity));\n\n  let cDomain = doses;\n  let cRange = d3.schemeSpectral[cDomain.length].reverse(); // let cRange = d3.quantize(d3.interpolateHcl(\"#60c96e\", \"#4d4193\"), cDomain.length)\n  // let cRange = d3.quantize((d3.interpolateRgb.gamma(2.2)(\"red\", \"blue\")), cDomain.length)\n\n  /**\n   * TO DO: add domains, ranges, labels to config so that render function is reusable\n   */\n  // let axis = ()=>{\n  //     return {\n  //     }\n  // }\n\n  let scale = () => {\n    return {\n      x: d3.scaleLinear().domain(d3.extent(Object.values(data).map(e => e.x))).range([0, plotConfig.innerWidth]).nice(),\n      y: d3.scaleLinear().domain(d3.extent(Object.values(data).map(d => d.y))).range([plotConfig.innerHeight, 0]).nice(),\n      c: d3.scaleOrdinal().domain(cDomain).range(cRange)\n    };\n  };\n\n  plotConfig.innerWidth = plotConfig.width - config.padding.left - config.padding.right, plotConfig.innerHeight = plotConfig.height - config.padding.top - config.padding.bottom, plotConfig.scale = scale();\n  return plotConfig;\n}\n\nexport function launch(data, config) {\n  doses = Object.values(data.tableData).map(d => {\n    if (Number.isFinite(+d.pert_dose)) {\n      return +d.pert_dose;\n    } else {\n      return d.pert_dose;\n    }\n  }).filter(helpers.getUnique).filter(d => d != undefined).sort((a, b) => (Number.isFinite(a) ? a : Infinity) - (Number.isFinite(b) ? b : Infinity));\n  let volcanoData = points.createScatterPoints(data.volcanoData);\n  let volcanoConfig = createVolcanoConfig(volcanoData, config);\n  scatterplot.render(volcanoData, volcanoConfig);\n}","map":{"version":3,"names":["d3","points","helpers","scatterplot","doses","createVolcanoConfig","data","config","plotConfig","rootId","width","select","node","clientHeight","height","padding","cDomain","cRange","schemeSpectral","length","reverse","scale","x","scaleLinear","domain","extent","Object","values","map","e","range","innerWidth","nice","y","d","innerHeight","c","scaleOrdinal","left","right","top","bottom","launch","tableData","Number","isFinite","pert_dose","filter","getUnique","undefined","sort","a","b","Infinity","volcanoData","createScatterPoints","volcanoConfig","render"],"sources":["/Users/liapetronio/Dropbox/Mac/Documents/Github/PRISM-data-portal/src/js/LineageEffect.js"],"sourcesContent":["import * as d3 from 'd3';\nimport * as points from './models/points.js';\nimport * as helpers from './utils/helpers.js';\nimport * as scatterplot from './plots/scatterplot.js';\n\nlet doses; // this should be grabbed from somewhere across all sections?\n\n// https://observablehq.com/@d3/working-with-color?collection=@d3/d3-color\n\nfunction createVolcanoConfig(data, config, plotConfig){\n\n    plotConfig = {\n        rootId: config.rootId,\n        // width: d3.select(`#${config.rootId}`).node().clientWidth,\n        // height:  d3.select(`#${config.rootId}`).node().clientWidth,\n        width: d3.select(`#${config.rootId}`).node().clientHeight,\n        height:  d3.select(`#${config.rootId}`).node().clientHeight,\n        padding: config.padding\n    }; \n\n    // let cDomain = (Object.values(data).map(d=>d.c)).filter(helpers.getUnique).sort((a, b) => (Number.isFinite(a) ? a: Infinity) - (Number.isFinite(b) ? b : Infinity));\n    let cDomain = doses;\n    let cRange = d3.schemeSpectral[cDomain.length].reverse()\n    // let cRange = d3.quantize(d3.interpolateHcl(\"#60c96e\", \"#4d4193\"), cDomain.length)\n    // let cRange = d3.quantize((d3.interpolateRgb.gamma(2.2)(\"red\", \"blue\")), cDomain.length)\n\n    /**\n     * TO DO: add domains, ranges, labels to config so that render function is reusable\n     */\n    // let axis = ()=>{\n    //     return {\n\n    //     }\n    // }\n    let scale = ()=>{\n        return { \n             x: d3.scaleLinear().domain(d3.extent(Object.values(data).map(e=>e.x))).range([0, plotConfig.innerWidth]).nice(),\n             y: d3.scaleLinear().domain(d3.extent(Object.values(data).map(d=>d.y))).range([plotConfig.innerHeight, 0]).nice(),\n             c: d3.scaleOrdinal().domain(cDomain).range(cRange)\n         }\n    }\n    plotConfig.innerWidth = plotConfig.width - config.padding.left - config.padding.right,\n    plotConfig.innerHeight = plotConfig.height - config.padding.top - config.padding.bottom,\n    plotConfig.scale = scale();\n    return plotConfig\n}\n\n\nexport function launch(data, config){\n\n    doses = Object.values(data.tableData).map(d=>{\n        if (Number.isFinite(+d.pert_dose)){ return +d.pert_dose }\n        else { return d.pert_dose }\n    }).filter(helpers.getUnique).filter(d=>d!=undefined).sort((a, b) => (Number.isFinite(a) ? a: Infinity) - (Number.isFinite(b) ? b : Infinity));\n\n    let volcanoData = points.createScatterPoints(data.volcanoData)\n    let volcanoConfig = createVolcanoConfig(volcanoData, config)\n     scatterplot.render(volcanoData, volcanoConfig)\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}