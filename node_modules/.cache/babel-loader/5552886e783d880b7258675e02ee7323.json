{"ast":null,"code":"import * as d3 from 'd3';\nimport * as Vis from '../js/LineageEffect.js';\nimport ExpansionPanel from '../components/ExpansionPanel';\n\nconst $ = require('jquery');\n\nrequire('datatables.net');\n\nlet dataFiles = {\n  tableData: \"data/lineage/lin_enrichment_data_table.csv\",\n  volcanoData: \"data/lineage/lineage_enrichment_volcano_plot.csv\",\n  violinData: \"data/lineage/box_plots_by_lineage.csv\"\n};\nlet config = {\n  rootId: \"scatterplot-wrapper\",\n  padding: {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 50\n  }\n};\nlet userInput = {\n  selections: []\n};\nexport default {\n  name: 'LineageEffect',\n  components: {\n    ExpansionPanel\n  },\n  data: () => ({\n    columns: [{\n      data: 'lineage',\n      title: \"lineage\"\n    }, {\n      data: 'effect_size',\n      title: \"effect_size\"\n    }, {\n      data: 'q_value',\n      title: \"q_value\"\n    }, {\n      data: 'pert_iname',\n      title: \"pert_iname\"\n    }, {\n      data: 'pert_dose',\n      title: \"pert_dose\"\n    }, {\n      data: 'n_lines',\n      title: \"n_lines\"\n    }],\n    dataType: {\n      name: \"Lineage Effect\",\n      title: \"Details\",\n      description: \"...\"\n    }\n  }),\n\n  mounted() {\n    this.launch();\n  },\n\n  methods: {\n    launch() {\n      Promise.all([d3.csv(dataFiles.tableData), d3.csv(dataFiles.volcanoData), d3.csv(dataFiles.violinData)]).then(result => {\n        let data = {\n          tableData: result[0],\n          volcanoData: result[1],\n          violinData: result[2]\n        }; // append an input for each column in footer\n\n        $('#table tfoot th').each(function (index) {\n          var title = $(this).text();\n          $(this).html('<input type=\"text\" id=\"txtName' + index + '\" placeholder=\"Search ' + title + '\" data-index=\"' + index + '\" />');\n        }); // initiate DataTable\n\n        $('#table').DataTable({\n          data: data.tableData,\n          dom: 'irtp',\n          searchable: true,\n          columns: this.columns,\n          search: {\n            caseInsensitive: true,\n            smart: true\n          },\n          initComplete: function () {\n            this.api().columns().every(function () {\n              var that = this;\n              $('input', this.footer()).on('keyup change clear', function () {\n                if (that.search() !== this.value) {\n                  that.search(this.value).draw();\n                }\n              });\n            });\n          }\n        }); // initiate Vis\n\n        Vis.launch(data, config, userInput);\n      });\n    },\n\n    deselect() {\n      Vis.updateSelections([]);\n      Vis.renderSelections();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+BA;AACA;AACA;;AAGA;;AACAA;;AAEA;EACAC,uDADA;EAEAC,+DAFA;EAGAC;AAHA;AAMA;EACAC,6BADA;EAEAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;AAFA;AAKA;EACAC;AADA;AAIA;EACAC,qBADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC;IACAC,UACA;MAAAD;MAAAE;IAAA,CADA,EAEA;MAAAF;MAAAE;IAAA,CAFA,EAGA;MAAAF;MAAAE;IAAA,CAHA,EAIA;MAAAF;MAAAE;IAAA,CAJA,EAKA;MAAAF;MAAAE;IAAA,CALA,EAMA;MAAAF;MAAAE;IAAA,CANA,CADA;IASAC;MACAN,sBADA;MAEAK,gBAFA;MAGAE;IAHA;EATA,EAHA;;EAmBAC;IACA;EACA,CArBA;;EAsBAC;IACAC;MACAC,aACAC,2BADA,EAEAA,6BAFA,EAGAA,4BAHA,GAMAC,IANA,CAMAC;QACA;UACAxB,oBADA;UAEAC,sBAFA;UAGAC;QAHA,EADA,CAQA;;QACAuB;UACA;UACAA;QACA,CAHA,EATA,CAaA;;QACAA;UACAZ,oBADA;UAEAa,WAFA;UAGAC,gBAHA;UAIAb,qBAJA;UAKAc;YACAC,qBADA;YAEAC;UAFA,CALA;UASAC;YACA;cACA;cACAN;gBACA;kBACAO,KACAJ,MADA,CACA,UADA,EAEAK,IAFA;gBAGA;cACA,CANA;YAOA,CATA;UAUA;QApBA,GAdA,CAoCA;;QACAC;MACA,CA5CA;IA8CA,CAhDA;;IAiDAC;MACAD;MACAA;IACA;;EApDA;AAtBA","names":["require","tableData","volcanoData","violinData","rootId","padding","top","right","bottom","left","selections","name","components","ExpansionPanel","data","columns","title","dataType","description","mounted","methods","launch","Promise","d3","then","result","$","dom","searchable","search","caseInsensitive","smart","initComplete","that","draw","Vis","deselect"],"sourceRoot":"src/views","sources":["LineageEffect.vue"],"sourcesContent":["<template>\n    <div>\n        <v-row\n            class=\"col-8\"\n          >\n            <ExpansionPanel \n                :header=\"dataType.title\"  \n                :description=\"dataType.description\"\n                >\n            </ExpansionPanel>\n        </v-row>\n            <div class=\"plots-wrapper\">\n                <svg id=\"scatterplot-wrapper\"></svg>\n            </div>\n         \n            <button @click=\"deselect\">Deselect</button>\n            <table id=\"table\" class=\"cell-border\">\n                <tfoot>\n                    <tr>\n                        <th v-for=\"each in columns\" :key=\"each.data\">\n                            {{ each.title}}\n                        </th>\n                    </tr>\n                </tfoot>\n            </table>\n\n    </div>\n </template>\n\n\n<script>\n    import * as d3 from 'd3';\n     import * as Vis from '../js/LineageEffect.js';\n    import ExpansionPanel from '../components/ExpansionPanel';\n\n    \n    const $  = require( 'jquery' );\n        require( 'datatables.net' );\n\n    let dataFiles = {\n        tableData: \"data/lineage/lin_enrichment_data_table.csv\",\n        volcanoData: \"data/lineage/lineage_enrichment_volcano_plot.csv\",\n        violinData: \"data/lineage/box_plots_by_lineage.csv\"\n    }\n\n    let config = {\n        rootId: \"scatterplot-wrapper\",\n        padding: {top:50, right:50, bottom:50, left:50}\n    }\n\n    let userInput = {\n        selections: []\n    }\n\n    export default {\n        name: 'LineageEffect',\n        components: { ExpansionPanel },\n        data: () => ({\n            columns: [\n                        { data: 'lineage', title: \"lineage\"},\n                        { data: 'effect_size', title: \"effect_size\"},\n                        { data: 'q_value', title: \"q_value\"},\n                        { data: 'pert_iname', title: \"pert_iname\"},\n                        { data: 'pert_dose', title: \"pert_dose\"},\n                        { data: 'n_lines', title: \"n_lines\"}\n             ],\n            dataType: {\n                name: \"Lineage Effect\",\n                title: \"Details\",\n                description:\"...\"\n            }\n        }),\n\n        mounted(){\n            this.launch()\n        },\n        methods: {\n            launch(){\n                Promise.all([\n                    d3.csv(dataFiles.tableData),\n                    d3.csv(dataFiles.volcanoData),\n                    d3.csv(dataFiles.violinData)\n\n                ])\n                .then((result) => {\n                    let data = {\n                        tableData: result[0],\n                        volcanoData:result[1],\n                        violinData: result[2]\n                    }\n   \n      \n                   // append an input for each column in footer\n                    $('#table tfoot th').each( function (index) {\n                        var title = $(this).text();\n                            $(this).html( '<input type=\"text\" id=\"txtName'+index+'\" placeholder=\"Search '+title+'\" data-index=\"'+index+'\" />' );\n                    } );\n                    // initiate DataTable\n                     $('#table').DataTable({\n                        data: data.tableData,\n                        dom: 'irtp', \n                        searchable: true,\n                        columns: this.columns,\n                        search: {\n                            caseInsensitive: true,\n                            smart: true\n                        }, \n                        initComplete: function () {\n                            this.api().columns().every( function () {          \n                                var that = this;  \n                                $( 'input', this.footer() ).on( 'keyup change clear', function () {\n                                    if ( that.search() !== this.value ) {\n                                        that\n                                            .search(this.value)\n                                            .draw();\n                                    }  \n                                } );    \n                            } );\n                        } \n                    })\n                    // initiate Vis\n                    Vis.launch(data, config, userInput)\n                })\n\n            },\n            deselect() { \n                Vis.updateSelections([]) \n                Vis.renderSelections() \n            }\n       }\n    }\n</script>\n\n<style>\n    .plots-wrapper{\n        width:100%;\n        height:40vh;\n        margin:0px;\n    }\n    #scatterplot-wrapper{\n        height:100%;\n        border:1px solid black;\n    }\n    .label{\n        font-size:12px;\n        display:none;\n    }\n\n    .active>.label, :hover>.label{\n        display:block;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}