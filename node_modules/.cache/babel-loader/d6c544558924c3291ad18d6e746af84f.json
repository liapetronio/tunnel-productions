{"ast":null,"code":"import * as d3 from 'd3';\nimport * as Vis from '../js/DoseResponse_v1.js';\nimport ExpansionPanel from '../components/ExpansionPanel';\n\nconst $ = require('jquery');\n\nrequire('datatables.net');\n\nfunction precise(x) {\n  return x.toPrecision(4);\n}\n\nlet dataFiles = {\n  curve: \"data/BRD-A47706533_drc_table.json\",\n  lfc: \"data/example_lfc.json\"\n};\nlet config = {\n  rootId: \"plot-wrapper\",\n  padding: {\n    top: 50,\n    right: 150,\n    bottom: 50,\n    left: 0\n  }\n};\nconst compound = {\n  name: \"Compound Name\",\n  doses: []\n};\nconst dataType = {\n  name: \"Dose-Response\",\n  description: \"Dose response curves fit for BRD-A00095938.Robust 4-parameter dose-response curves (DRCs) are fit for each cell line using the viability metrics (see the Data Processing section). The four parameters are upper limit, lower limit, slope, and EC50.\"\n};\nlet userInput = {\n  selections: []\n};\nconst columns = [{\n  data: 'ccle_name',\n  title: \"ccle_name\"\n}, // { data: 'convergence', title: \"convergence\"},\n{\n  data: 'auc',\n  title: \"auc\"\n}, {\n  data: 'ec50',\n  title: \"ec50\"\n}, {\n  data: 'R2',\n  title: \"R2\"\n}, // { data: 'log2.ic50', title: \"log2.ic50\"},\n// { data: 'max_dose', title: \"max_dose\"},\n// { data: 'min_dose', title: \"min_dose\"},\n{\n  data: 'mse',\n  title: \"mse\"\n}, {\n  data: 'pert_plate',\n  title: \"pert_plate\"\n}, {\n  data: 'pert_time',\n  title: \"pert_time\"\n}, {\n  data: 'slope',\n  title: \"slope\"\n}];\nexport default {\n  name: 'DoseResponse',\n  components: {\n    ExpansionPanel\n  },\n  data: () => ({\n    compound: compound,\n    dataType: dataType\n  }),\n\n  mounted() {\n    this.launch();\n  },\n\n  methods: {\n    launch() {\n      Promise.all([d3.json(dataFiles.curve), d3.json(dataFiles.lfc)]).then(result => {\n        let data = {\n          curve: result[0].result,\n          lfc: result[1].result\n        }; // append an input for each column in footer\n\n        $('#table tfoot th').each(function (index) {\n          var title = $(this).text();\n          $(this).html('<input type=\"text\" id=\"txtName' + index + '\" placeholder=\"Search ' + title + '\" data-index=\"' + index + '\" />');\n        }); // initiate DataTable\n\n        $('#table').DataTable({\n          data: data.curve,\n          dom: 'irtp',\n          searchable: true,\n          columns: columns,\n          columnDefs: [{\n            targets: [1, 3, 4, 5],\n            render: $.fn.dataTable.render.number(',', '.', 3)\n          }, {\n            targets: [2],\n            render: function (data) {\n              return precise(data);\n            }\n          }],\n          search: {\n            caseInsensitive: true,\n            smart: true\n          },\n          initComplete: function () {\n            this.api().columns().every(function () {\n              var that = this;\n              $('input', this.footer()).on('keyup change clear', function () {\n                if (that.search() !== this.value) {\n                  that.search(this.value).draw();\n                }\n              });\n            });\n          }\n        }); // initiate Vis\n\n        Vis.launch(data, config, userInput);\n      });\n    },\n\n    deselect() {\n      // this should get replaced with an exit option in the ccle_name column?\n      Vis.updateSelections([]);\n      Vis.renderSelections();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgCA;AACA;AACA;;AAGA;;AACAA;;AAEA;EACA;AACA;;AAEA;EACAC,0CADA;EAEAC;AAFA;AAKA;EACAC,sBADA;EAEAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;AAFA;AAKA;EACAC,qBADA;EAEAC;AAFA;AAIA;EACAD,qBADA;EAEAE;AAFA;AAKA;EACAC;AADA;AAGA,iBACA;EAAAC;EAAAC;AAAA,CADA,EAEA;AACA;EAAAD;EAAAC;AAAA,CAHA,EAIA;EAAAD;EAAAC;AAAA,CAJA,EAKA;EAAAD;EAAAC;AAAA,CALA,EAMA;AACA;AACA;AACA;EAAAD;EAAAC;AAAA,CATA,EAUA;EAAAD;EAAAC;AAAA,CAVA,EAWA;EAAAD;EAAAC;AAAA,CAXA,EAYA;EAAAD;EAAAC;AAAA,CAZA;AAeA;EACAL,oBADA;EAEAM;IAAAC;EAAA,CAFA;EAGAH;IACAI,kBADA;IAEAC;EAFA,EAHA;;EAOAC;IACA;EACA,CATA;;EAUAC;IACAC;MACAC,aACAC,wBADA,EAEAA,sBAFA,GAIAC,IAJA,CAIAC;QACA;UACAxB,uBADA;UAEAC;QAFA,EADA,CAKA;;QACAwB;UACA;UACAA;QACA,CAHA,EANA,CAUA;;QACAA;UACAb,gBADA;UAEAc,WAFA;UAGAC,gBAHA;UAIAC,gBAJA;UAKAC,aACA;YACAC,qBADA;YAEAC;UAFA,CADA,EAKA;YACAD,YADA;YAEAC;cACA;YACA;UAJA,CALA,CALA;UAgBAC;YACAC,qBADA;YAEAC;UAFA,CAhBA;UAoBAC;YACA;cACA;cACAV;gBACA;kBACAW,KACAJ,MADA,CACA,UADA,EAEAK,IAFA;gBAGA;cACA,CANA;YAOA,CATA;UAUA;QA/BA,GAXA,CA4CA;;QACAC;MACA,CAlDA;IAoDA,CAtDA;;IAuDAC;MAAA;MACAD;MACAA;IACA;;EA1DA;AAVA","names":["require","curve","lfc","rootId","padding","top","right","bottom","left","name","doses","description","selections","data","title","components","ExpansionPanel","compound","dataType","mounted","methods","launch","Promise","d3","then","result","$","dom","searchable","columns","columnDefs","targets","render","search","caseInsensitive","smart","initComplete","that","draw","Vis","deselect"],"sourceRoot":"src/views","sources":["DoseResponse.vue"],"sourcesContent":["<template>\n    <div class=\"data-section\">\n        <v-row\n            class=\"col-8\"\n          >\n        <ExpansionPanel \n            :header=\"`${this.dataType.name} Data`\"  \n            :description=\"this.dataType.description\"\n            >\n            </ExpansionPanel>\n        </v-row>\n        <button @click=\"deselect\">Deselect</button>\n        <svg id=\"plot-wrapper\"></svg>\n        <table id=\"table\" class=\"cell-border\">\n            <tfoot>\n                <tr>\n                    <th>ccle_name</th>\n                    <th>auc</th>\n                    <th>ec50</th>\n                    <th>R2</th>\n                    <th>mse</th>\n                    <th>pert_plate</th>\n                    <th>pert_time</th>\n                    <th>slope</th>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n </template>\n\n\n<script>\n    import * as d3 from 'd3';\n    import * as Vis from '../js/DoseResponse_v1.js';\n    import ExpansionPanel from '../components/ExpansionPanel';\n\n\n    const $  = require( 'jquery' );\n        require( 'datatables.net' );\n\n    function precise(x) {\n        return x.toPrecision(4);\n    }\n    \n    let dataFiles = {\n        curve: \"data/BRD-A47706533_drc_table.json\",\n        lfc: \"data/example_lfc.json\"\n    }\n\n    let config = {\n        rootId: \"plot-wrapper\",\n        padding: {top:50, right:150, bottom:50, left:0}\n    }\n\n    const compound = {\n        name: \"Compound Name\",\n        doses: []\n    };\n    const dataType = {\n        name: \"Dose-Response\",\n        description:\"Dose response curves fit for BRD-A00095938.Robust 4-parameter dose-response curves (DRCs) are fit for each cell line using the viability metrics (see the Data Processing section). The four parameters are upper limit, lower limit, slope, and EC50.\"\n    }\n\n    let userInput = {\n        selections: []\n    }\n    const columns = [\n        { data: 'ccle_name', title: \"ccle_name\"},\n        // { data: 'convergence', title: \"convergence\"},\n        { data: 'auc', title: \"auc\"},\n        { data: 'ec50', title: \"ec50\"},\n        { data: 'R2', title: \"R2\"},\n        // { data: 'log2.ic50', title: \"log2.ic50\"},\n        // { data: 'max_dose', title: \"max_dose\"},\n        // { data: 'min_dose', title: \"min_dose\"},\n        { data: 'mse', title: \"mse\"},\n        { data: 'pert_plate', title: \"pert_plate\"},\n        { data: 'pert_time', title: \"pert_time\"},\n        { data: 'slope', title: \"slope\"}\n    ]\n\n    export default {\n        name: 'DoseResponse',\n        components: { ExpansionPanel },\n        data: () => ({\n            compound: compound,\n            dataType: dataType\n        }),\n        mounted(){\n            this.launch()\n        },\n        methods: {\n            launch(){\n                Promise.all([\n                    d3.json(dataFiles.curve),\n                    d3.json(dataFiles.lfc)\n                ])\n                .then((result) => {\n                    let data = {\n                        curve: result[0].result,\n                        lfc: result[1].result\n                    }\n                   // append an input for each column in footer\n                    $('#table tfoot th').each( function (index) {\n                        var title = $(this).text();\n                            $(this).html( '<input type=\"text\" id=\"txtName'+index+'\" placeholder=\"Search '+title+'\" data-index=\"'+index+'\" />' );\n                    } );\n                    // initiate DataTable\n                     $('#table').DataTable({\n                        data: data.curve,\n                        dom: 'irtp', \n                        searchable: true,\n                        columns: columns,\n                        columnDefs: [\n                            {\n                            targets: [1,3,4,5],\n                            render: $.fn.dataTable.render.number(',', '.', 3)\n                            },\n                            {\n                                targets: [2],\n                                render: function ( data) {\n                                    return precise(data)\n                                }\n                            }],\n                        search: {\n                            caseInsensitive: true,\n                            smart: true\n                        }, \n                        initComplete: function () {\n                            this.api().columns().every( function () {          \n                                var that = this;  \n                                $( 'input', this.footer() ).on( 'keyup change clear', function () {\n                                    if ( that.search() !== this.value ) {\n                                        that\n                                            .search(this.value)\n                                            .draw();\n                                    }  \n                                } );    \n                            } );\n                        } \n                    })\n                    // initiate Vis\n                    Vis.launch(data, config, userInput)\n                })\n\n            },\n            deselect() { // this should get replaced with an exit option in the ccle_name column?\n                Vis.updateSelections([]) \n                Vis.renderSelections() \n            }\n        }\n    }\n</script>\n\n<style>\n    .data-section{\n        width:90%;\n        margin:auto;\n        min-height:100vh;\n    }\n\n    #plot-wrapper{\n        width:100%;\n        height:40vh;\n        margin:0px;\n    }\n\n    .curve{\n        opacity:.4;\n    }\n\n    .curve.inactive{\n        opacity:1;\n    }\n    .curve.inactive>.path{\n        stroke:#c8c8c8;\n    }\n\n    .curve.active, .curve:hover{\n        opacity:1;\n        cursor:pointer;\n    }\n    .curve>.path{\n        stroke-width:.5px;\n    }\n    .curve>.label{\n        font-size:6px;\n        display:none;\n    }\n    .active>.path, .curve:hover>.path {\n        stroke-width:3px;\n    }\n    .active>.label, .curve:hover>.label{\n        display:block;\n    }\n    .brush-track{\n        fill-opacity:0.25;\n    }\n\n\n</style>"]},"metadata":{},"sourceType":"module"}